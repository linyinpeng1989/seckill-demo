1、使用CDN（内容分发网络）获取静态资源（js、css等），同时可以将秒杀页面静态化并部署到CDN上，加速页面加载时间并降低秒杀系统负载（秒杀即将开始时用户频繁刷新）
2、获取系统时间需要优化么？ Java访问一次内存大概耗时10ns（纳秒，1秒等于10亿纳秒），即Java在1秒内可以进行1亿次内存操作，因此不需要额外优化
3、如何优化暴露秒杀接口服务？ 服务端缓存（Redis、mamcache等）
4、如何优化秒杀操作？
    ①高并发解决方案1
    ②高并发解决方案2_MySQL
        1)降低行级锁持有时间
            一、调整业务逻辑顺序：先插入秒杀成功记录（复合主键确保无法重复秒杀），根据插入结果判断是否需要减库存操作
                （MySQL行级锁只在commit后才会释放，所以只会在事务完成并commit后才会释放行级锁，因此先插入秒杀成功记录再减库存，可以减少行级锁的持有时间）
        2)把客户端的逻辑放到MySQL服务端，避免网络延迟和GC影响
            一、定制SQL方案：update/*+[auto_commit]*/，需要修改MySQL源码
            二、使用存储过程：整个事务在MySQL端完成
